Â
/C:\NET\NET.AI\UnitTestProject\PlayerAnalyzer.cs
	namespace 	
StudentProject
 
{ 
public 
class	 
Player 
{ 
public 

string 
Name 
{ 
get 
; 
set !
;! "
}# $
public 

int 
Age 
{ 
get 
; 
set 
; 
}  
public 

int 

Experience 
{ 
get 
;  
set! $
;$ %
}& '
public 

List 
< 
int 
> 
Skills 
{ 
get !
;! "
set# &
;& '
}( )
} 
public		 
class			 
PlayerAnalyzer		 
{		 
public

 

double

 
CalculateScore

  
(

  !
List

! %
<

% &
Player

& ,
>

, -
players

. 5
)

5 6
{

7 8
double 
score 
= 
$num 
; 
foreach 
( 
var 
player 
in 
players $
)$ %
{& '
double 
skillsAverage 
= 
player %
.% &
Skills& ,
., -
Sum- 0
(0 1
)1 2
/3 4
(5 6
double6 <
)< =
player= C
.C D
SkillsD J
.J K
CountK P
;P Q
double 
contribution 
= 
player $
.$ %
Age% (
*) *
player+ 1
.1 2

Experience2 <
*= >
skillsAverage? L
;L M
if 

( 
player 
. 
Age 
< 
$num 
) 
{ 
contribution
 
*= 
$num 
; 
} 	
if 

( 
player 
. 

Experience 
> 
$num  "
)" #
{$ %
contribution
 
*= 
$num 
; 
} 	
score 
+= 
contribution 
; 
} 
return 
score 
; 
} 
} 
} ¢
(C:\NET\NET.AI\UnitTestProject\Program.cs
Console 
. 
	WriteLine 
( 
$str !
)! "
;" #¼
1C:\NET\NET.AI\UnitTestProject\StudentConverter.cs
	namespace 	
StudentProject
 
{ 
public 
class	 
Student 
{ 
public 

string 
Name 
{ 
get 
; 
set !
;! "
}# $
public 

int 
Age 
{ 
get 
; 
set 
; 
}  
public 

int 
Grade 
{ 
get 
; 
set 
;  
}! "
public 

bool 
Exceptional 
{ 
get !
;! "
set# &
;& '
}( )
public 

bool 
	HonorRoll 
{ 
get 
;  
set! $
;$ %
}& '
public		 

bool		 
Passed		 
{		 
get		 
;		 
set		 !
;		! "
}		# $
}

 
public 
class	 
StudentConverter 
{  !
public 

List 
< 
Student 
> 
ConvertStudents (
(( )
List) -
<- .
Student. 5
>5 6
students7 ?
)? @
{A B
return 
students 
. 
Select 
( 
student $
=>% '
{ 
var 
result 
= 
new 
Student  
{! "
Name
 
= 
student 
. 
Name 
, 
Age
 
= 
student 
. 
Age 
, 
Grade
 
= 
student 
. 
Grade 
} 	
;	 

if 

( 
student 
. 
Grade 
> 
$num 
) 
{  !
if
 
( 
student 
. 
Age 
< 
$num 
) 
{  !
result 
. 
Exceptional 
=  
true! %
;% &
}
 
else 
{ 
result 
. 
	HonorRoll 
= 
true #
;# $
}
 
} 	
else
 
if 
( 
student 
. 
Grade  
>! "
$num# %
)% &
{' (
result
 
. 
Passed 
= 
true 
; 
} 	
else
 
{ 
result  
 
.   
Passed   
=   
false   
;    
}!! 	
return## 
result## 
;## 
}$$ 
)$$ 
.$$ 	
ToList$$	 
($$ 
)$$ 
;$$ 
}%% 
}&& 
}'' 